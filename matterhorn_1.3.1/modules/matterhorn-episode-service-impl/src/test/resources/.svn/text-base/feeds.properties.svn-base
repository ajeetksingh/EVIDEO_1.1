####
# Definitions for the simple feed generator.
# 
# Note that the first token in every key is treated as the channel identifier
# and needs to be passed in the url to the feed servlet, e. g.
# /feeds/atom/0.3/<identifier>.
#
# In order to understand how to configure a feed, take a look a the
# documentation below:
#
# <feed>.name:
#     Name of the format, used in download dialogs of the frontend.
#
# <feed>.description:
#     Short description of the feed's contents.
#
# <feed>.copyright:
#     The feed copyright notice.
#
# <feed>.url:
#     Link the to the feed homepage.
#
# <feed>.cover:
#     Url to the cover image of this aggregated feed.
#
# <feed>.series:
#     Comma separated list of series that will be queried for the most recent
#     entries. Note that if the 'series' property is specified, a possible
#     'query' property will be overwritten.
#
# <feed>.query:
#     Query takes a solr expression used to deliver episode items to the
#     feed generator implementation. Note that if the 'series' property is
#     specified, this property will not be taken into account.
#
##

# Example configuration for a feed aggregated from a number of series
campuslife.name = Campus Life
campuslife.description = News around the campus
campuslife.copyright = ETH Zurich. All rights reserved
campuslife.url = http://localhost/series/campuslife
campuslife.cover = http://localhost/images/campuslife.jpg
campuslife.series = series007, series008
campuslife.query = 

# Example configuration for aggregated feed created by a solr query
speakers.name = Distinguished Speakers
speakers.description = Collection of talks and speeches
speakers.copyright = ETH Zurich. All rights reserved
speakers.url = http://localhost/series/distinguished
speakers.cover = http://localhost/images/test.jpg
speakers.series = 
speakers.query = dc_title:test