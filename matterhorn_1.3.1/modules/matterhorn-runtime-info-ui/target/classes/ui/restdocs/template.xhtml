<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <title>${meta.title} REST Documentation</title>
  <style type="text/css">
  /* styles for the page */
  HTML {
    font: 13px/1.231 arial,helvetica,clean,sans-serif;
  }
  FIELDSET {
    margin-bottom: 2em;
    margin-top: 0.5em;
    padding-bottom: 1em;
    width: 90%;
  }
  PRE {
    white-space: pre-wrap;       /* css-3 */
    white-space: -moz-pre-wrap !important;  /* Mozilla, since 1999 */
    white-space: -pre-wrap;      /* Opera 4-6 */
    white-space: -o-pre-wrap;    /* Opera 7 */
    word-wrap: break-word;       /* Internet Explorer 5.5+ */
  }
  TABLE.method {
    width: 100%;
  }
  TABLE.testing {
    width: 96%;
    border: 2px solid #CCC;
  }
  UL {
    margin: 0.2em;
    padding-left: 1em;
  }
  DIV.table_spacer {
    height: 2em;
  }
  DIV.footer {
    padding-top: 1em;
    font-weight: bold;
  }
  .method_set_header {
    padding-left: 0.5em;
    padding-right: 0.5em;
    font-size: 1.4em;
    font-weight: bold;
  }
  .method_header TH {
    background: #F6921E none repeat scroll 0 0;
    font-size: 1.2em;
    font-weight: bold;
    padding: 0.6em 0.3em;
    text-align: left;
    vertical-align: middle;;
  }
  TH.method_header_left {
    text-align: right;
    padding: 0.6em 1em;
  }
  TR.method TH {
    font-family: sans-serif;
    font-weight: normal;
    padding: 0.5em 1.0em;
    text-align: right;
    vertical-align: middle;
  }
  TR.method TH.method_important {
    font-weight: bold;
  }
  TR.method TD {
    border-bottom: 1px solid #CCC;
    padding-bottom: 6px;
    padding-left: 4px;
    padding-top: 6px;
    vertical-align: middle;
  }
  TR.testform TD {
  }
  TR.testform A {
  }
  DIV.hidden {
    display: none;
  }
  DIV.spaced {
    margin: 4px 0px;
  }
  A.hidden {
    display: none;
  }
  TD.form_label {
    width: 10%;
    font-size: 1.1em !important;
  }
  .form_field_description {
    font-size: 0.9em !important;
  }
  TD.form_submit {
    border: none !important;
  }
  test_form_response TEXTAREA {
    font-size: small;
    font-family: monospace;
    width: 100%;
  }
  </style>
</head>
<body>
<div style="margin-top: .5em">
  <a href="/welcome.html">
    <h1 style="color: rgb(246, 146, 30); font-size:138.5%;"><img src="/img/MatterhornLogo_80x57.png" alt="Opencast Matterhorn" border=0>&nbsp;&nbsp;Opencast Matterhorn</h1>
  </a>
</div>

<h2>${meta.title} REST Documentation</h2>
<span class="meta_url">${meta.url}</span>
<#if meta.abstract??>
<div class="meta_abstract">${meta.abstract}</div>
</#if>

<#list endpointHolders as endpointHolder>
<fieldset id="endpoint_holder_${endpointHolder.name}">
<legend class="method_set_header">${endpointHolder.title} methods</legend>
<#if (endpointHolder.endpoints?size <= 0)>
<em>NONE</em>
<#else>
<#list endpointHolder.endpoints as endpoint>
<table id="${endpoint.name}" class="method" cellpadding="0px" cellspacing="0px"
  summary="${endpointHolder.title} function for the ${endpoint.method} ${endpoint.path} REST endpoint, Name of the attribute followed by the value">
  <thead>
    <tr class="method_header">
      <th width="20%" scope="col" class="method_header_left">NAME</th>
      <th scope="col">VALUE and NOTES</th>
    </tr>
  </thead>
  <tbody>
    <tr class="method">
      <th class="method_important" scope="row">Method / Path:</th>
      <td><tt title="${meta.url}${endpoint.path}">${endpoint.method} ${endpoint.path}</tt></td>
    </tr>
    <tr class="method">
      <th scope="row">Description:</th>
      <td>${endpoint.description!"<em>NONE</em>"}</td>
    </tr>
    <tr class="method">
      <th class="method_important" scope="row">Path params:</th>
      <td>
        <#if (endpoint.pathParams?size > 0)>
        <#list endpoint.pathParams as param>
        <tt>${param.name}<#if param.defaultValue??>&#40;Default value=${param.escapedDefaultValue}&#41;</#if></tt>: ${param.description!"<em>NONE</em>"}<#if param_has_next> <br/></#if>
        </#list>
        <#else>
        <em>NONE</em>
        </#if>
      </td>
    </tr>
    <#if (endpoint.requiredParams?size > 0)>
    <tr class="method">
      <th class="method_important" scope="row">Required (form) params:</th>
      <td>
        <#list endpoint.requiredParams as param>
        <tt>
          ${param.name}: ${param.description!""}
          <#if param.xmlSchema??>
            <div>
              <a href="#" class="show_form_link">XML Schema</a>
              <div class="hidden_form hidden">
                <#if param.escapedXmlSchema??><pre>${param.escapedXmlSchema}</pre></#if>
              </div>
              <a href="#" class="hide_form_link hidden">Hide</a>
            </div>
          </#if>
        </tt><#if param_has_next> <br/></#if>
        </#list>
      </td>
    </tr>
    </#if>
    <#if endpoint.bodyParam??>
    <tr class="method">
      <th class="method_important" scope="row">Body (upload) param:</th>
      <td>
        <#if endpoint.bodyParam.defaultValue??><tt>&#40;Default value=${endpoint.bodyParam.escapedDefaultValue}&#41;</tt>: </#if>${endpoint.bodyParam.description!"<em>NONE</em>"}
      </td>
    </tr>
    </#if>
    <tr class="method">
      <th scope="row">Optional (<#if (endpoint.method == "GET")>query<#else>form</#if>) params:</th>
      <td>
        <#if (endpoint.optionalParams?size > 0)>
        <#list endpoint.optionalParams as param>
        <tt>${param.name}<#if param.defaultValue??>&#40;Default value=${param.escapedDefaultValue}&#41;</#if></tt>: ${param.description!"<em>NONE</em>"}<#if param_has_next> <br/></#if>
        </#list>
        <#else>
        <em>NONE</em>
        </#if>
      </td>
    </tr>
    <#if (endpoint.formats?size > 0)>
    <tr class="method">
      <th scope="row">Response formats:</th>
      <td>
        <#list endpoint.formats as format>
        <#if format.url??><a href="${format.url}">${format.name}</a><#else>${format.name}</#if> <#if format.description??>(${format.description})</#if><#if format_has_next> <br/></#if>
        </#list>
      </td>
    </tr>
    </#if>
    <tr class="method">
      <th scope="row">Status codes:</th>
      <td>
        <#if (endpoint.statuses?size <= 0)>
        <em>NONE</em>
        <#else>
        <#list endpoint.statuses as status>
        <tt>${status.code}: ${status.name}</tt>, ${status.description!"<em>NONE</em>"}<#if status_has_next> <br/></#if>
        </#list>
        </#if>
      </td>
    </tr>
    <#if (endpoint.returnTypeSchema??)>
      <tr class="method">
        <th scope="row">Returned Entity Schema:</th>
        <td>
          <div>
            <a href="#" class="show_form_link">Click to view</a>
            <div class="hidden_form hidden">
              <#if endpoint.escapedReturnTypeSchema??><pre>${endpoint.escapedReturnTypeSchema}</pre></#if>
            </div>
            <a href="#" class="hide_form_link hidden">Hide</a>
          </div>
        </td>
      </tr>
    </#if>
    <#if (endpoint.notes?size > 0)>
    <tr class="method">
      <th scope="row">Notes:</th>
      <td>
        <ul>
          <#list endpoint.notes as note>
          <li>${note}</li>
          </#list>
        </ul>
      </td>
    </tr>
    </#if>
    <tr class="method testform">
      <th scope="row">Testing:</th>
      <td>
        <div class="spaced"><strong>Sample:</strong>
        <tt class="sample_url">${endpoint.path}${endpoint.queryString!}</tt>
        </div>
        <#if endpoint.form??>
        <#if (endpoint.form.basic)><#-- link to the basic endpoint path -->
        <a href="${meta.url}${endpoint.path}${endpoint.queryString!}">${meta.url}${endpoint.path}${endpoint.queryString!}</a>
        <#else>
        <a href="#" class="show_form_link">Testing form (click to reveal)</a>
        <div class="hidden_form hidden">
          <form id="form_${endpoint.name}" class="form_test_form" action="${meta.url}${endpoint.path}" 
                method="${endpoint.method?lower_case}"<#if endpoint.form.fileUpload> enctype="multipart/form-data"</#if>>
            <input class="form_action_holder" type="hidden" value="${meta.url}${endpoint.path}" />
            <input class="form_endpoint_name" type="hidden" value="${endpoint.name}" />
            <input class="form_method" type="hidden" value="${endpoint.method}" />
            <#if (endpoint.form.ajaxSubmit)>
            <input class="form_ajax_submit" type="hidden" value="1" />
            </#if>
            <div class="spaced">
                <strong>Form action:</strong> <tt class="form_path">${meta.url}${endpoint.path}</tt>
            </div>
            <table class="testing" cellpadding="0" cellspacing="0">
              <#list endpoint.form.items as item>
              <tr class="form_field <#if item.required>form_required<#else>form_optional</#if>">
                <#if item.type == "text">
                <td class="form_textarea" colspan="3">
                  <label for="${endpoint.name}_${item.name}">${item.name}</label>:<br/>
                  <textarea id="${endpoint.name}_${item.name}" name="${item.name}" class="form_field_text form_param_submit<#if item.required> form_param_required</#if>" 
                    rows="<#if item.attributes.rows??>${item.attributes.rows}<#else><#if item.name == "BODY">8<#else>3</#if></#if>" cols="${(item.attributes.cols)!'80'}">${item.defaultValue!}</textarea>
                  <div class="form_field_description">${item.description!}</div>
                </td>
                <#elseif item.type == "boolean">
                <td class="form_label">
                  <#if item.required>* </#if><label for="${endpoint.name}_${item.name}">${item.name}</label>:
                </td>
                <td>
                  <input id="${endpoint.name}_${item.name}" name="${item.name}" class="form_field <#if item.path>form_param_path<#else>form_param_submit</#if><#if item.required> form_param_required</#if>" 
                    type="checkbox" value="true" />
                </td>
                <td class="form_field_description">${item.description!}</td>
                <#elseif item.type == "file">
                <td class="form_label">
                  <#if item.required>* </#if><label for="${endpoint.name}_${item.name}">${item.name}</label>:
                </td>
                <td>
                  <input id="${endpoint.name}_${item.name}" name="${item.name}" class="form_field_file" class="form_field form_param_upload<#if item.required> form_param_required</#if>" type="file" />
                </td>
                <td class="form_field_description">${item.description!}</td>
                <#else>
                <td class="form_label">
                  <#if item.required>* </#if><label for="${endpoint.name}_${item.name}">${item.name}</label>:
                </td>
                <td>
                  <input id="${endpoint.name}_${item.name}" class="form_field <#if item.path>form_param_path<#else>form_param_submit</#if><#if item.required> form_param_required</#if>" name="${item.name}" 
                    type="text" value="${item.defaultValue!}" size="${(item.attributes.size)!'30'}" />
                </td>
                <td class="form_field_description">${item.description!}</td>
                </#if>
              </tr>
              </#list>
              <tr>
                <td colspan="3">
                  <div class="form_submit">
                    <input type="submit" value="SUBMIT" />
                    <input type="button" value="CANCEL" />
                  </div>
                </td>
              </tr>
            </table>
          </form>
          <#if (endpoint.form.ajaxSubmit)>
          <div class="test_form_working hidden">... WORKING ...</div>
          <div class="test_form_response hidden">
            <div>Response:</div>
            <pre style="width: 100%; border-left: 4px solid #999; padding-left: 10px;"></pre>
          </div>
          </#if>
        </div>
        <a href="#" class="hide_form_link hidden">Hide</a>
        </#if>
      </td>
    </tr>
    </#if>
  </tbody>
</table>

<#if endpoint_has_next>
<div class="table_spacer"></div>
</#if>

</#list>
</#if>
</fieldset>
</#list>


<fieldset>
<legend class="method_set_header">General Notes</legend>
<#if (notes?size <= 0)>
<em>NONE</em>
<#else>
<ul>
  <#list notes as note>
  <li>${note}</li>
  </#list>
</ul>
</#if>
</fieldset>

<div class="footer">Service of 
    <a href="http://www.opencastproject.org/" title="Opencast Project">Opencast</a>
    <a href="http://www.opencastproject.org/project/matterhorn" title="Opencast Matterhorn">Matterhorn</a>
</div>

<!-- JAVASCRIPT below here -->
<script type="text/javascript" src="/jquery/jquery-1.4.2.min.js"></script>
<script type="text/javascript">
/*global alert, jQuery  */
(function($) {

    $("a.show_form_link").click(
        function() {
           var $this = $(this);
           var $form = $this.parent().find("div.hidden_form");
           var $hidectrl = $this.parent().find("a.hide_form_link");
           $form.toggle(400);
           $hidectrl.show();
           $this.parent().find("div.form_submit input[type='button']").click(
              function() {
                 $form.hide(200);
                 $this.show();
              }
           );
           $this.hide();
           return false;
        }
    );

    $("a.hide_form_link").click(
        function() {
           var $this = $(this);
           var $form = $this.parent().find("div.hidden_form");
           var $show_form_ctrl = $this.parent().find("a.show_form_link");
           $form.hide(200);
           $show_form_ctrl.show();
           $this.hide();
           return false;
        }
     );

    /**
     * Takes a path and integrates the pathParams values into it
     * @param {String} path the path with keys (e.g. /my/{thing}/{stuff})
     * @param {Array} params the params to put into the path (e.g. {'thing':'apple'})
     */
    function updatePath(path, params) {
        var newPath = path;
        for (var key in params) {
            if (params.hasOwnProperty(key)) {
                var value = params[key];
                if (value !== undefined && value !== null && value !== '') {
					// The Regex here handles syntax like /episode.{format:xml|json}.
					// In this case, the {format:xml|json} part is extracted, then
					// the xml|json part is used as the second regex to verify user's input.
					// If the input is valid, the path /episode.{format:xml|json} would be 
					// replaced by /episode.xml for example.
                    var regex = new RegExp( "{" + key + "(:[^}]*|)}", "");
                    if (regex.test(newPath))
                    {
                         var pat = regex.exec(newPath)[1].substring(1);
                         var regex2 = new RegExp(pat, "");
                         if (regex2.test(value))
                         {
                           newPath = newPath.replace(regex, value);
                         } else
                         {
                           alert('The value for ' + key + ' is invalid.');
                         }
                    } else
                    {
                         alert("wrong syntax");
                    }
                }
            }
        }
        return newPath;
    }
 
    function checkPath($form) {
        var params = [];
        $form.find(".form_param_path").each( function() {
            var $param = $(this);
            params[$param.attr('name')] = $param.val();
        });
        var form_path = $form.find("input.form_action_holder").val();
        var path = updatePath(form_path, params);
        // update form and display
        $form.attr('action', path);
        $form.find(".form_path").html(path);
        if (path.indexOf("{") >= 0 && path.indexOf("}") >= 0) {
            return false;
        }
        return true;
    }
    function checkRequired($form) {
        // check all required items
        var $required = $form.find(".form_param_required");
        var total = $required.length;
        var counter = 0;
        $required.each( function() {
            var $this = $(this);
            if ($this.val() !== null && $this.val() !== '') {
                counter++;
            }
        });
        var $formInputs = $form.find("div.form_submit input");
        if (counter >= total) {
            // submit is ok
            $formInputs.removeAttr('disabled');
            return true;
        } else {
            // disable form submit until required options at set
            $formInputs.attr('disabled', 'disabled');
            return false;
        }
    }
    // do operation on all testing forms
    $("form.form_test_form").each( function() {
        var $form = $(this);
        if ($form.find("input.form_action_holder").length >= 1) {
            // now find and put the event handler on all path params
            $form.find(".form_param_path").change( function() {
                checkPath($form);
            });
            // run the checkPath method
            checkPath($form);
            var $reqParams = $form.find(".form_param_required");
            if ($reqParams.length > 0) {
                // add required options checks
                $reqParams.change( function(){
                    checkRequired($form);
                });
            }
            // run the check required
            checkRequired($form);
            // handle the ajax submissions
            if ($form.find("input.form_ajax_submit").length >= 1) {
              // the form will use ajax submit
              //var form_key = $form.find("input.form_endpoint_name").val();
              // add an event handler to the form submit
              $form.bind('submit', function() {
                  if ( checkRequired($form) ) {
                      var submitParams = {};
                      $form.find(".form_param_submit").each( function() {
                          var $param = $(this);
                          var $value = $param.val();
                          if (this.type == 'checkbox' && !this.checked) {
                            $value = "false";
                          }
                          submitParams[$param.attr('name')] = $value;
                      });
                      //alert("params: " + $.param(submitParams));
                      var method = $form.find(".form_method").val();
                      var url = $form.attr('action');
                      $form.parent().find(".test_form_working").show();
                      $form.parent().find(".test_form_response input").click(function(){
                          $(this).parent.hide();
                          $this.parent().find("a.hide_form_link").hide();
                      });
                      
                      // clear previous responses
                      var responseBody = $form.parent().find(".test_form_response");
                      responseBody.hide();
                      responseBody.find("pre").text("");

                      // make the request
                      $.ajax({
                          type: method,
                          url: url,
                          processData: true,
                          dataType: 'text',
                          data: submitParams,
                          success: function(data, textStatus, request) {
                              $form.parent().find(".test_form_working").hide();
                              var responseBody = $form.parent().find(".test_form_response");
                              responseBody.show();
                              var msg = "Status: " + request.status + " (" + request.statusText + ")\n\n" + data;
                              responseBody.find("pre").text(msg);
                          },
                          error: function(request, textStatus, errorThrown) {
                              $form.parent().find(".test_form_working").hide();
                              var responseBody = $form.parent().find(".test_form_response");
                              var msg = "Status: " + request.status + " (" + request.statusText + ")";
                              responseBody.show();
                              responseBody.find("pre").text(msg);
                          }
                      });
                  } else {
                      alert("Fill out all required fields first");
                  }
                  return false;
              });
            }
        }
    });
}(jQuery));
</script>

</body>
</html>
