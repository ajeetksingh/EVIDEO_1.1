<?xml version="1.0" encoding="utf-8"?>

<!--
	 /**
	 *  Copyright 2009 The Regents of the University of California
	 *  Licensed under the Educational Community License, Version 2.0
	 *  (the "License"); you may not use this file except in compliance
	 *  with the License. You may obtain a copy of the License at
	 *
	 *  http://www.osedu.org/licenses/ECL-2.0
	 *
	 *  Unless required by applicable law or agreed to in writing,
	 *  software distributed under the License is distributed on an "AS IS"
	 *  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
	 *  or implied. See the License for the specific language governing
	 *  permissions and limitations under the License.
	 *
	 */
-->
<mx:Canvas width="100%"
		   height="100%"
		   xmlns:players="com.adobe.strobe.players.*"
		   xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:view="org.opencast.engage.videodisplay.view.*"
		   resize="{ resizeVideodisplay() }"
		   xmlns:osmf="com.osmf.*">

	<mx:Script>
		<![CDATA[
			import mx.core.Application;
			import mx.core.Container;
			import org.opencast.engage.videodisplay.control.event.ResizeVideodisplayEvent;
			import org.opencast.engage.videodisplay.model.VideodisplayModel;
			import org.osmf.containers.MediaContainer;
			import org.osmf.layout.HorizontalAlign;
			import org.osmf.layout.ScaleMode;
			import org.osmf.media.MediaPlayer;
			import org.swizframework.Swiz;

			[Autowire]
			[Bindable]
			public var model:VideodisplayModel;

			/**
			 * initPlayerLeft
			 * Init the left Videoplayer, create a new Media Container, and add the new container to the UI Component.
			 */
			public function initPlayerLeft():void
			{
				model.mediaContainerOne=new MediaContainer();
				this.mediaContainerLeftUIComponent.container=model.mediaContainerOne;
			}

			/**
			 * initPlayerRight
			 * Init the right Videoplayer, create a new Media Container, and add the new container to the UI Component.
			 */
			public function initPlayerRight():void
			{
				model.mediaContainerTwo=new MediaContainer();
				this.mediaContainerRightUIComponent.container=model.mediaContainerTwo;
			}

			/**
			 * resizeVideodisplay
			 * When the user resize the Videodisplay in the Browser call the ResizeVideodisplayEvent.
			 */
			public function resizeVideodisplay():void
			{
				Swiz.dispatchEvent(new ResizeVideodisplayEvent());
				Swiz.autowire(this);
			}

			/**
			 * setMediaContainers
			 * Set the percent height and percent width in the both median containers.
			 * @param Number percentOne, Number percentTwo
			 */
			public function setMediaContainers(percentOne:Number, percentTwo:Number):void
			{
				mediaContainerLeftUIComponent.percentWidth=percentOne;
				mediaContainerLeftUIComponent.percentHeight=100;
				mediaContainerRightUIComponent.percentWidth=percentTwo;
				mediaContainerRightUIComponent.percentHeight=100;

				if (model.previewPlayer == true)
				{
					model.layoutMetadataTwo.horizontalAlign=HorizontalAlign.CENTER;
					model.layoutMetadataOne.horizontalAlign=HorizontalAlign.CENTER;
				}
			}
		]]>
	</mx:Script>

	<mx:states>

		<mx:State name="onlyleft"
				  enterState="{setMediaContainers(100,0)}"/>

		<mx:State name="bigleft"
				  enterState="{setMediaContainers(100,50)}"/>

		<mx:State name="center"
				  enterState="{setMediaContainers(100,100)}"/>

		<mx:State name="bigright"
				  enterState="{setMediaContainers(50,100)}"/>

		<mx:State name="onlyright"
				  enterState="{setMediaContainers(0,100)}"/>
	</mx:states>

	<!--
		 <mx:HBox
		 id="hb_media"
		 width="100%"
		 horizontalGap="0"
		 height="100%"
		 left="{model.multiMediaContainerLeft}"
		 right="{ model.multiMediaContainerRight }"
		 bottom="{ model.multiMediaContainerBottom }"
		 top="0"
		 >

		 <osmf:MediaContainerUIComponent
		 id = "mediaContainerLeftUIComponent"
		 addedToStage = "initPlayerLeft()"
		 />

		 <osmf:MediaContainerUIComponent
		 id = "mediaContainerRightUIComponent"
		 addedToStage = "initPlayerRight()"
		 />

		 </mx:HBox>-->
	<mx:HBox id="hb_media"
			 width="100%"
			 horizontalGap="0"
			 height="100%"
			 left="{ model.previewPlayer == true ? 0 : model.multiMediaContainerLeft}"
			 right="{ model.previewPlayer == true ? 0 : model.multiMediaContainerRight}"
			 bottom="{model.previewPlayer == true ? 0 : model.multiMediaContainerBottom}"
			 top="0">
		<!-- Debug view can be used to get feedback from the videoservers, html -->
		<!--<view:DebugView/>-->

		<osmf:MediaContainerUIComponent id="mediaContainerLeftUIComponent"
										addedToStage="initPlayerLeft()"/>

		<osmf:MediaContainerUIComponent id="mediaContainerRightUIComponent"
										addedToStage="initPlayerRight()"/>

	</mx:HBox>
</mx:Canvas>
