#!/bin/bash
echo "------------------------------------------------------------------------"
echo `cd "${0%/*}" 2>/dev/null; echo $PWD/${0##*/}`
echo "------------------------------------------------------------------------"
set -x
source "${HOME3P}/utilx"
[ $? -ne 0 ] && exit 1
#
[ -f .done-win32 ] && exit 0
typeset -i ii=1
for _pkg in pkg1 pkg2 pkg3 pkg4 pkg5 pkg6; do
  eval $_pkg=`getcfg PKG$ii:`
  chkpkg "${!_pkg}" || exit 1
  chmod 644 "${!_pkg}"
  [ $? -ne 0 ] && exit 1
  let ii=ii+1
done
dir=`getcfg DIR:`
[ -z "$dir" -o "$dir" = "/" ] && exit 1
pcp1=`getcfg PCP1:`
pcp2=`getcfg PCP2:`
[ -z "$pcp1" -o -z "$pcp2" ] && exit 1
#
rm -fr "$dir" "${dir}-win32"
[ $? -ne 0 ] && exit 1
gzip -dc "$pkg1" | tar -xv
[ ${PIPESTATUS[0]} -ne 0 -o ${PIPESTATUS[1]} -ne 0 ] && exit 1
mv "$dir" "${dir}-win32"
[ $? -ne 0 ] && exit 1
#
cd "${dir}-win32/tessdata"
[ $? -ne 0 ] && exit 1
gzip -dc "../../$pkg2" | tar -xv
[ ${PIPESTATUS[0]} -ne 0 -o ${PIPESTATUS[1]} -ne 0 ] && exit 1
mv tesseract-ocr/tessdata/* .
[ $? -ne 0 ] && exit 1
rm -fr tesseract-ocr
[ $? -ne 0 ] && exit 1
cd ..
[ $? -ne 0 ] && exit 1
#
gzip -dc ../tesseract-3.01m.tar.gz | tar -xv
[ ${PIPESTATUS[0]} -ne 0 -o ${PIPESTATUS[1]} -ne 0 ] && exit 1
#
sudox cp ../winsock2.h ${MINGW32_PREFIX}/include/winsock2.h
[ $? -ne 0 ] && exit 1
#
./autogen.sh
[ $? -ne 0 ] && exit 1
./configure \
--host=${MINGW32} \
--disable-shared \
CFLAGS=-D__MSW32__ \
CPPFLAGS=-D__MSW32__ \
LIBS="-lws2_32 -lgif -ltiff -ljpeg -lpng -lz"
[ $? -ne 0 ] && exit 1
make
[ $? -ne 0 ] && exit 1
#
mkdir -p tess_inc
[ $? -ne 0 ] && exit 1
cp api/*.h tess_inc
[ $? -ne 0 ] && exit 1
cp ccmain/*.h tess_inc
[ $? -ne 0 ] && exit 1
cp ccstruct/*.h tess_inc
[ $? -ne 0 ] && exit 1
cp ccutil/*.h tess_inc
[ $? -ne 0 ] && exit 1
cp classify/*.h tess_inc
[ $? -ne 0 ] && exit 1
cp cube/*.h tess_inc
[ $? -ne 0 ] && exit 1
cp cutil/*.h tess_inc
[ $? -ne 0 ] && exit 1
cp dict/*.h tess_inc
[ $? -ne 0 ] && exit 1
cp image/*.h tess_inc
[ $? -ne 0 ] && exit 1
cp neural_networks/runtime/*.h tess_inc
[ $? -ne 0 ] && exit 1
cp textord/*.h tess_inc
[ $? -ne 0 ] && exit 1
cp viewer/*.h tess_inc
[ $? -ne 0 ] && exit 1
cp wordrec/*.h tess_inc
[ $? -ne 0 ] && exit 1
cp training/*.h tess_inc
[ $? -ne 0 ] && exit 1
cp viewer/svpaint.cpp tess_inc
[ $? -ne 0 ] && exit 1
sudox rm -fr ${MINGW32_PREFIX}/include/tesseract
[ $? -ne 0 ] && exit 1
sudox mkdir -p ${MINGW32_PREFIX}/include/tesseract
[ $? -ne 0 ] && exit 1
sudox cp tess_inc/* ${MINGW32_PREFIX}/include/tesseract
[ $? -ne 0 ] && exit 1
#
mkdir -p tess_lib
[ $? -ne 0 ] && exit 1
cp api/.libs/libtesseract.a tess_lib
[ $? -ne 0 ] && exit 1
cp api/.libs/libtesseract_api.a tess_lib
[ $? -ne 0 ] && exit 1
cp ccmain/.libs/libtesseract_main.a tess_lib
[ $? -ne 0 ] && exit 1
cp ccstruct/.libs/libtesseract_ccstruct.a tess_lib
[ $? -ne 0 ] && exit 1
cp ccutil/.libs/libtesseract_ccutil.a tess_lib
[ $? -ne 0 ] && exit 1
cp classify/.libs/libtesseract_classify.a tess_lib
[ $? -ne 0 ] && exit 1
cp cube/.libs/libtesseract_cube.a tess_lib
[ $? -ne 0 ] && exit 1
cp cutil/.libs/libtesseract_cutil.a tess_lib
[ $? -ne 0 ] && exit 1
cp dict/.libs/libtesseract_dict.a tess_lib
[ $? -ne 0 ] && exit 1
cp image/.libs/libtesseract_image.a tess_lib
[ $? -ne 0 ] && exit 1
cp neural_networks/runtime/.libs/libtesseract_neural.a tess_lib
[ $? -ne 0 ] && exit 1
cp textord/.libs/libtesseract_textord.a tess_lib
[ $? -ne 0 ] && exit 1
cp training/.libs/libtesseract_tessopt.a tess_lib
[ $? -ne 0 ] && exit 1
cp training/.libs/libtesseract_training.a tess_lib
[ $? -ne 0 ] && exit 1
cp viewer/.libs/libtesseract_viewer.a tess_lib
[ $? -ne 0 ] && exit 1
cp wordrec/.libs/libtesseract_wordrec.a tess_lib
[ $? -ne 0 ] && exit 1
sudox cp tess_lib/* ${MINGW32_PREFIX}/lib
[ $? -ne 0 ] && exit 1
#
zip -j "../$pcp1" api/tesseract.exe
[ $? -ne 0 ] && exit 1
zip -j "../$pcp1" training/cntraining.exe
[ $? -ne 0 ] && exit 1
zip -j "../$pcp1" training/combine_tessdata.exe
[ $? -ne 0 ] && exit 1
zip -j "../$pcp1" training/mftraining.exe
[ $? -ne 0 ] && exit 1
zip -j "../$pcp1" training/unicharset_extractor.exe
[ $? -ne 0 ] && exit 1
zip -j "../$pcp1" training/wordlist2dawg.exe
[ $? -ne 0 ] && exit 1
zip -j "../$pcp1" tess_lib/*.a
[ $? -ne 0 ] && exit 1
#
mkdir -p x
[ $? -ne 0 ] && exit 1
cd x
[ $? -ne 0 ] && exit 1
cp -r ../tessdata .
[ $? -ne 0 ] && exit 1
find . -name 'Makefile*' -exec rm {} \;
[ $? -ne 0 ] && exit 1
for _pkg in pkg3 pkg4 pkg5 pkg6; do
  cp "../../${!_pkg}" tessdata
  [ $? -ne 0 ] && exit 1
  gzip -df "tessdata/${!_pkg}"
  [ $? -ne 0 ] && exit 1
done
zip -r "../../$pcp1" tessdata
[ $? -ne 0 ] && exit 1
zip -r "../../$pcp2" tessdata
[ $? -ne 0 ] && exit 1
copypc usr/local/share -r tessdata
[ $? -ne 0 ] && exit 1
cd -
[ $? -ne 0 ] && exit 1
#
copypc usr/local/bin api/tesseract.exe
[ $? -ne 0 ] && exit 1
copypc usr/local/bin training/cntraining.exe
[ $? -ne 0 ] && exit 1
copypc usr/local/bin training/combine_tessdata.exe
[ $? -ne 0 ] && exit 1
copypc usr/local/bin training/mftraining.exe
[ $? -ne 0 ] && exit 1
copypc usr/local/bin training/unicharset_extractor.exe
[ $? -ne 0 ] && exit 1
copypc usr/local/bin training/wordlist2dawg.exe
[ $? -ne 0 ] && exit 1
#
touch ../.done-win32
[ $? -ne 0 ] && exit 1
exit 0
